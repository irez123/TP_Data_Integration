services:
  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - bigdata_network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"  
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bigdata_network

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.4.4
    container_name: kafka_rest
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - bigdata_network

  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-namenode
    environment:
      CLUSTER_NAME: test
      CORE_CONF_fs_defaultFS: hdfs://hadoop-namenode:9000
    ports:
      - "9870:9870"
    volumes:
      - hadoop_namenode_data:/hadoop/dfs/name
    networks:
      - bigdata_network

  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-datanode
    environment:
      CORE_CONF_fs_defaultFS: hdfs://hadoop-namenode:9000
    depends_on:
      - hadoop-namenode
    volumes:
      - hadoop_datanode_data:/hadoop/dfs/data
      - C:/Users/LENOVO/Documents/TP_DataIntegration:/data
    networks:
      - bigdata_network

  spark-master:
    image: bitnami/spark:3.3.1
    container_name: spark-master
    ports:
      - "8080:8080"
    environment:
      SPARK_MODE: master
      SPARK_MASTER_PORT: 7077
      CORE_CONF_fs_defaultFS: hdfs://hadoop-namenode:9000  # Connexion à HDFS
      SPARK_DIST_CLASSPATH: /opt/hadoop/etc/hadoop:/opt/hadoop/share/hadoop/common/*:/opt/hadoop/share/hadoop/common/lib/*:/opt/hadoop/share/hadoop/hdfs/*:/opt/hadoop/share/hadoop/hdfs/lib/*:/opt/hadoop/share/hadoop/mapreduce/*:/opt/hadoop/share/hadoop/mapreduce/lib/*:/opt/hadoop/share/hadoop/yarn/*:/opt/hadoop/share/hadoop/yarn/lib/*
    depends_on:
      - hadoop-namenode  
    networks:
      - bigdata_network

  spark-worker:
    image: bitnami/spark:3.3.1
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      CORE_CONF_fs_defaultFS: hdfs://hadoop-namenode:9000  # Connexion à HDFS
      SPARK_DIST_CLASSPATH: /opt/hadoop/etc/hadoop:/opt/hadoop/share/hadoop/common/*:/opt/hadoop/share/hadoop/common/lib/*:/opt/hadoop/share/hadoop/hdfs/*:/opt/hadoop/share/hadoop/hdfs/lib/*:/opt/hadoop/share/hadoop/mapreduce/*:/opt/hadoop/share/hadoop/mapreduce/lib/*:/opt/hadoop/share/hadoop/yarn/*:/opt/hadoop/share/hadoop/yarn/lib/*
    networks:
      - bigdata_network

  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: api-service
    ports:
      - "5000:5000"
    depends_on:
      - kafka
    networks:
      - bigdata_network

volumes:
  hadoop_namenode_data:
  hadoop_datanode_data:
  kafka_data:

networks:
  bigdata_network:
